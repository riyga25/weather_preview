# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
update_fastlane

#before_all do
#  ensure_git_branch
#  ensure_git_status_clean
#  git_pull
#end

default_platform(:android)

APP_NAME = "weather"
ANDROID_PROJECT = './android/'

platform :android do
  desc "Submit a new Beta Build to App Distribution"
  lane :beta do
    begin
      notification(subtitle: 'Android', message: "#{APP_NAME} Start Building")
      increment_version_code(
        gradle_file_path: "#{ANDROID_PROJECT}app/build.gradle",
        app_folder_name:"#{ANDROID_PROJECT}app"
      )
      gradle(task: 'clean', project_dir: ANDROID_PROJECT)
      gradle(task: 'assemble', build_type: 'Release', project_dir: ANDROID_PROJECT)
      notification(subtitle: 'Android', message: "#{APP_NAME} Finished Building")

      firebase_app_distribution(
        app: "1:45396165976:android:8cf7f13b58b977e4f3d12d",
        apk_path: "./android/app/build/outputs/apk/release/app-release.apk",
        release_notes_file: "./RELEASE_NOTES",
        groups: "testers"
      )

      GRADLE_FILE = "#{ANDROID_PROJECT}app/build.gradle"
      APK_LOCATION = "#{lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]}"
      APK_DESTINATION = "~/Desktop/#{APP_NAME}.apk"
#      VERSION_CODE = android_get_version_code(gradle_file: GRADLE_FILE)
#      VERSION_NAME = android_get_version_name(gradle_file: GRADLE_FILE)
#      VERSION_NAME = VERSION_NAME.gsub(/\./, "_")
#      APK_DESTINATION = "~/Desktop/#{APP_NAME}_v-#{VERSION_NAME}b-#{VERSION_CODE}.apk"
#      sh("cp #{APK_LOCATION} #{APK_DESTINATION}")
#      notification(subtitle: 'Android', message: "#{APP_NAME} Copied to #{APK_DESTINATION}")

      git_pull
      git_commit(path: GRADLE_FILE, message: "Change build version Android")
      push_to_git_remote
      notification(subtitle: 'Android', message: "#{APP_NAME} Commited and Pushed to VCS")

      notification(subtitle: 'Android', message: "Lane :beta finished")
    rescue => error
      notification(subtitle: 'Android', message: "Lane :beta failed")
      raise error
    end
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end
